using DataFrames, CSV, HTTP, Random, LinearAlgebra, Statistics, Optim, DataFramesMeta, GLM

julia> ^C

julia> url = "https://raw.githubusercontent.com/OU-PhD-Econometrics/fall-2020/master/ProblemSets/PS5-ddc/busdataBeta0.csv"
"https://raw.githubusercontent.com/OU-PhD-Econometrics/fall-2020/master/ProblemSets/PS5-ddc/busdataBeta0.csv"

julia> df = CSV.read(HTTP.get(url).body)
┌ Warning: `CSV.read(input; kw...)` is deprecated in favor of `using DataFrames; CSV.read(input, DataFrame; kw...)
│   caller = read(::Array{UInt8,1}) at CSV.jl:40
└ @ CSV C:\Users\walee\.julia\packages\CSV\MKemC\src\CSV.jl:40
1000×63 DataFrame. Omitted printing of 43 columns
│ Row  │ Y1    │ Y2    │ Y3    │ Y4    │ Y5    │ Y6    │ Y7    │ Y8    │ Y9    │ Y10   │ Y11   │ Y12   │ Y13   │ Y14   │ Y15   │ Y16   │ Y17   │ Y18   │ Y19   │ Y20   │
│      │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │
├──────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤
│ 1    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 2    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │
│ 3    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │
⋮
│ 997  │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 998  │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 999  │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 1000 │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │

julia> 

julia> df = @transform(df, bus_id = 1:size(df,1))
1000×64 DataFrame. Omitted printing of 44 columns
│ Row  │ Y1    │ Y2    │ Y3    │ Y4    │ Y5    │ Y6    │ Y7    │ Y8    │ Y9    │ Y10   │ Y11   │ Y12   │ Y13   │ Y14   │ Y15   │ Y16   │ Y17   │ Y18   │ Y19   │ Y20   │  
│      │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │  
├──────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤  
│ 1    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │  
│ 2    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │  
│ 3    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │  
⋮
│ 997  │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │  
│ 998  │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │  
│ 999  │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │  
│ 1000 │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │  

julia> dfy = @select(df, :bus_id,:Y1,:Y2,:Y3,:Y4,:Y5,:Y6,:Y7,:Y8,:Y9,:Y10,:Y11,:Y12,:Y13,:Y14,:Y15,:Y16,:Y17,:Y18,:Y19,:Y20,:RouteUsage,:Branded)
1000×23 DataFrame. Omitted printing of 3 columns
│ Row  │ bus_id │ Y1    │ Y2    │ Y3    │ Y4    │ Y5    │ Y6    │ Y7    │ Y8    │ Y9    │ Y10   │ Y11   │ Y12   │ Y13   │ Y14   │ Y15   │ Y16   │ Y17   │ Y18   │ Y19   │
│      │ Int64  │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │
├──────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤
│ 1    │ 1      │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │
│ 2    │ 2      │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 3    │ 3      │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │
⋮
│ 997  │ 997    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 998  │ 998    │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 999  │ 999    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 
│ 1000 │ 1000   │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │

julia> dfy_long = DataFrames.stack(dfy, Not([:bus_id,:RouteUsage,:Branded]))
20000×5 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ variable │ value │
│       │ Int64  │ Float64    │ Int64   │ Cat…     │ Int64 │
├───────┼────────┼────────────┼─────────┼──────────┼───────┤
│ 1     │ 1      │ 0.88       │ 1       │ Y1       │ 1     │
│ 2     │ 2      │ 0.6        │ 1       │ Y1       │ 1     │
│ 3     │ 3      │ 1.25       │ 0       │ Y1       │ 1     │
⋮
│ 19997 │ 997    │ 0.66       │ 1       │ Y20      │ 1     │
│ 19998 │ 998    │ 0.98       │ 1       │ Y20      │ 1     │
│ 19999 │ 999    │ 1.03       │ 0       │ Y20      │ 1     │
│ 20000 │ 1000   │ 0.62       │ 1       │ Y20      │ 1     │

julia> rename!(dfy_long, :value => :Y)
20000×5 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ variable │ Y     │
│       │ Int64  │ Float64    │ Int64   │ Cat…     │ Int64 │
├───────┼────────┼────────────┼─────────┼──────────┼───────┤
│ 1     │ 1      │ 0.88       │ 1       │ Y1       │ 1     │
│ 2     │ 2      │ 0.6        │ 1       │ Y1       │ 1     │
│ 3     │ 3      │ 1.25       │ 0       │ Y1       │ 1     │
⋮
│ 19997 │ 997    │ 0.66       │ 1       │ Y20      │ 1     │
│ 19998 │ 998    │ 0.98       │ 1       │ Y20      │ 1     │
│ 19999 │ 999    │ 1.03       │ 0       │ Y20      │ 1     │
│ 20000 │ 1000   │ 0.62       │ 1       │ Y20      │ 1     │

julia> dfy_long = @transform(dfy_long, time = kron(collect([1:20]...),ones(size(df,1))))
20000×6 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ variable │ Y     │ time    │
│       │ Int64  │ Float64    │ Int64   │ Cat…     │ Int64 │ Float64 │
├───────┼────────┼────────────┼─────────┼──────────┼───────┼─────────┤
│ 1     │ 1      │ 0.88       │ 1       │ Y1       │ 1     │ 1.0     │
│ 2     │ 2      │ 0.6        │ 1       │ Y1       │ 1     │ 1.0     │
│ 3     │ 3      │ 1.25       │ 0       │ Y1       │ 1     │ 1.0     │
⋮
│ 19997 │ 997    │ 0.66       │ 1       │ Y20      │ 1     │ 20.0    │
│ 19998 │ 998    │ 0.98       │ 1       │ Y20      │ 1     │ 20.0    │
│ 19999 │ 999    │ 1.03       │ 0       │ Y20      │ 1     │ 20.0    │
│ 20000 │ 1000   │ 0.62       │ 1       │ Y20      │ 1     │ 20.0    │

julia> select!(dfy_long, Not(:variable))
20000×5 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ Y     │ time    │
│       │ Int64  │ Float64    │ Int64   │ Int64 │ Float64 │
├───────┼────────┼────────────┼─────────┼───────┼─────────┤
│ 1     │ 1      │ 0.88       │ 1       │ 1     │ 1.0     │
│ 2     │ 2      │ 0.6        │ 1       │ 1     │ 1.0     │
│ 3     │ 3      │ 1.25       │ 0       │ 1     │ 1.0     │
⋮
│ 19997 │ 997    │ 0.66       │ 1       │ 1     │ 20.0    │
│ 19998 │ 998    │ 0.98       │ 1       │ 1     │ 20.0    │
│ 19999 │ 999    │ 1.03       │ 0       │ 1     │ 20.0    │
│ 20000 │ 1000   │ 0.62       │ 1       │ 1     │ 20.0    │

julia> dfx = @select(df, :bus_id,:Odo1,:Odo2,:Odo3,:Odo4,:Odo5,:Odo6,:Odo7,:Odo8,:Odo9,:Odo10,:Odo11,:Odo12,:Odo13,:Odo14,:Odo15,:Odo16,:Odo17,:Odo18,:Odo19,:Odo20)      
1000×21 DataFrame. Omitted printing of 5 columns
│ Row  │ bus_id │ Odo1    │ Odo2    │ Odo3    │ Odo4    │ Odo5    │ Odo6    │ Odo7    │ Odo8    │ Odo9    │ Odo10   │ Odo11   │ Odo12   │ Odo13   │ Odo14   │ Odo15   │
│      │ Int64  │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │
├──────┼────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
│ 1    │ 1      │ 9.125   │ 9.375   │ 9.5     │ 10.125  │ 10.25   │ 11.5    │ 0.0     │ 1.875   │ 1.875   │ 2.875   │ 3.375   │ 6.5     │ 9.25    │ 9.625   │ 9.75    │
│ 2    │ 2      │ 0.0     │ 1.125   │ 1.625   │ 1.625   │ 1.625   │ 3.5     │ 6.0     │ 8.625   │ 10.75   │ 0.0     │ 0.125   │ 0.875   │ 2.5     │ 3.375   │ 4.5     │
│ 3    │ 3      │ 2.375   │ 3.375   │ 3.5     │ 4.25    │ 4.75    │ 5.25    │ 0.0     │ 0.25    │ 0.5     │ 1.0     │ 1.25    │ 1.375   │ 1.375   │ 2.0     │ 2.25    │
⋮
│ 997  │ 997    │ 5.625   │ 7.875   │ 11.0    │ 11.375  │ 12.0    │ 15.25   │ 15.625  │ 15.625  │ 15.75   │ 15.875  │ 0.0     │ 1.5     │ 3.375   │ 5.0     │ 5.625   │
│ 998  │ 998    │ 9.625   │ 0.0     │ 2.0     │ 3.0     │ 3.625   │ 3.625   │ 3.875   │ 5.0     │ 0.0     │ 0.25    │ 0.0     │ 0.5     │ 1.125   │ 3.125   │ 3.125   │
│ 999  │ 999    │ 0.375   │ 1.0     │ 1.125   │ 1.875   │ 1.875   │ 1.875   │ 4.75    │ 9.375   │ 0.0     │ 0.75    │ 0.0     │ 0.0     │ 0.75    │ 1.875   │ 5.0     │
│ 1000 │ 1000   │ 1.25    │ 0.0     │ 0.375   │ 0.0     │ 0.375   │ 0.375   │ 0.375   │ 1.0     │ 1.25    │ 6.0     │ 6.125   │ 8.25    │ 0.0     │ 0.75    │ 0.75    │

julia> dfx_long = DataFrames.stack(dfx, Not([:bus_id]))
20000×3 DataFrame
│ Row   │ bus_id │ variable │ value   │
│       │ Int64  │ Cat…     │ Float64 │
├───────┼────────┼──────────┼─────────┤
│ 1     │ 1      │ Odo1     │ 9.125   │
│ 2     │ 2      │ Odo1     │ 0.0     │
│ 3     │ 3      │ Odo1     │ 2.375   │
⋮
│ 19997 │ 997    │ Odo20    │ 15.0    │
│ 19998 │ 998    │ Odo20    │ 7.875   │
│ 19999 │ 999    │ Odo20    │ 0.125   │
│ 20000 │ 1000   │ Odo20    │ 4.0     │

julia> rename!(dfx_long, :value => :Odometer)
20000×3 DataFrame
│ Row   │ bus_id │ variable │ Odometer │
│       │ Int64  │ Cat…     │ Float64  │
├───────┼────────┼──────────┼──────────┤
│ 1     │ 1      │ Odo1     │ 9.125    │
│ 2     │ 2      │ Odo1     │ 0.0      │
│ 3     │ 3      │ Odo1     │ 2.375    │
⋮
│ 19997 │ 997    │ Odo20    │ 15.0     │
│ 19998 │ 998    │ Odo20    │ 7.875    │
│ 19999 │ 999    │ Odo20    │ 0.125    │
│ 20000 │ 1000   │ Odo20    │ 4.0      │

julia> dfx_long = @transform(dfx_long, time = kron(collect([1:20]...),ones(size(df,1))))
20000×4 DataFrame
│ Row   │ bus_id │ variable │ Odometer │ time    │
│       │ Int64  │ Cat…     │ Float64  │ Float64 │
├───────┼────────┼──────────┼──────────┼─────────┤
│ 1     │ 1      │ Odo1     │ 9.125    │ 1.0     │
│ 2     │ 2      │ Odo1     │ 0.0      │ 1.0     │
│ 3     │ 3      │ Odo1     │ 2.375    │ 1.0     │
⋮
│ 19997 │ 997    │ Odo20    │ 15.0     │ 20.0    │
│ 19998 │ 998    │ Odo20    │ 7.875    │ 20.0    │
│ 19999 │ 999    │ Odo20    │ 0.125    │ 20.0    │
│ 20000 │ 1000   │ Odo20    │ 4.0      │ 20.0    │

julia> select!(dfx_long, Not(:variable))
20000×3 DataFrame
│ Row   │ bus_id │ Odometer │ time    │
│       │ Int64  │ Float64  │ Float64 │
├───────┼────────┼──────────┼─────────┤
│ 1     │ 1      │ 9.125    │ 1.0     │
│ 2     │ 2      │ 0.0      │ 1.0     │
│ 3     │ 3      │ 2.375    │ 1.0     │
⋮
│ 19997 │ 997    │ 15.0     │ 20.0    │
│ 19998 │ 998    │ 7.875    │ 20.0    │
│ 19999 │ 999    │ 0.125    │ 20.0    │
│ 20000 │ 1000   │ 4.0      │ 20.0    │

julia> df_long = leftjoin(dfy_long, dfx_long, on = [:bus_id,:time])
20000×6 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ Y     │ time    │ Odometer │
│       │ Int64  │ Float64    │ Int64   │ Int64 │ Float64 │ Float64? │
├───────┼────────┼────────────┼─────────┼───────┼─────────┼──────────┤
│ 1     │ 1      │ 0.88       │ 1       │ 1     │ 1.0     │ 9.125    │
│ 2     │ 2      │ 0.6        │ 1       │ 1     │ 1.0     │ 0.0      │
│ 3     │ 3      │ 1.25       │ 0       │ 1     │ 1.0     │ 2.375    │
⋮
│ 19997 │ 997    │ 0.66       │ 1       │ 1     │ 20.0    │ 15.0     │
│ 19998 │ 998    │ 0.98       │ 1       │ 1     │ 20.0    │ 7.875    │
│ 19999 │ 999    │ 1.03       │ 0       │ 1     │ 20.0    │ 0.125    │
│ 20000 │ 1000   │ 0.62       │ 1       │ 1     │ 20.0    │ 4.0      │

julia> sort!(df_long,[:bus_id,:time])
20000×6 DataFrame
│ Row   │ bus_id │ RouteUsage │ Branded │ Y     │ time    │ Odometer │
│       │ Int64  │ Float64    │ Int64   │ Int64 │ Float64 │ Float64? │
├───────┼────────┼────────────┼─────────┼───────┼─────────┼──────────┤
│ 1     │ 1      │ 0.88       │ 1       │ 1     │ 1.0     │ 9.125    │
│ 2     │ 1      │ 0.88       │ 1       │ 1     │ 2.0     │ 9.375    │
│ 3     │ 1      │ 0.88       │ 1       │ 1     │ 3.0     │ 9.5      │
⋮
│ 19997 │ 1000   │ 0.62       │ 1       │ 1     │ 17.0    │ 2.375    │
│ 19998 │ 1000   │ 0.62       │ 1       │ 0     │ 18.0    │ 5.75     │
│ 19999 │ 1000   │ 0.62       │ 1       │ 1     │ 19.0    │ 0.0      │
│ 20000 │ 1000   │ 0.62       │ 1       │ 1     │ 20.0    │ 4.0      │

julia> 

julia> θ=glm(@formula(Y ~ Odometer + Branded), df_long, Binomial(), LogitLink())
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = (::StatsModels.var"#18#19"{DataFrame})(::Symbol) at modelframe.jl:145
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:145
┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool = false)` is deprecated, use `rename!(df, vals, makeunique = makeunique)` instead.
│   caller = ModelFrame(::StatsModels.Terms, ::DataFrame; contrasts::Dict{Any,Any}) at modelframe.jl:146
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:146
┌ Warning: `eachcol(df::AbstractDataFrame, names::Bool)` is deprecated, use `if names
│     collect(pairs(eachcol(df)))
│ else
│     eachcol(df)
│ end` instead.
│   caller = evalcontrasts(::DataFrame, ::Dict{Any,Any}) at modelframe.jl:124
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:124
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = check_non_redundancy!(::StatsModels.Terms, ::DataFrame) at modelframe.jl:84
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:84
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = modelmat_cols(::Type{Array{Float64,2}}, ::Symbol, ::ModelFrame; non_redundant::Bool) at modelmatrix.jl:34
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelmatrix.jl:34
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = model_response(::ModelFrame) at modelframe.jl:181
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:181
┌ Warning: `T` is deprecated, use `nonmissingtype` instead.
│   caller = model_response(::ModelFrame) at modelframe.jl:182
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:182
┌ Warning: `getindex(df::DataFrame, col_ind::ColumnIndex)` is deprecated, use `df[!, col_ind]` instead.
│   caller = termnames(::Symbol, ::ModelFrame; non_redundant::Bool) at modelframe.jl:204
└ @ StatsModels C:\Users\walee\.julia\packages\StatsModels\pBxdt\src\modelframe.jl:204
StatsModels.DataFrameRegressionModel{GeneralizedLinearModel{GlmResp{Array{Float64,1},Binomial{Float64},LogitLink},DensePredChol{Float64,Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Y ~ 1 + Odometer + Branded

Coefficients:
──────────────────────────────────────────────────────
              Estimate   Std.Error   z value  Pr(>|z|)
──────────────────────────────────────────────────────
(Intercept)   1.92596   0.0334931    57.5032    <1e-99
Odometer     -0.148154  0.00390916  -37.8993    <1e-99
Branded       1.05919   0.0433309    24.4442    <1e-99
──────────────────────────────────────────────────────

julia> println(θ)
StatsModels.DataFrameRegressionModel{GeneralizedLinearModel{GlmResp{Array{Float64,1},Binomial{Float64},LogitLink},DensePredChol{Float64,Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}

Formula: Y ~ 1 + Odometer + Branded

Coefficients:
──────────────────────────────────────────────────────
              Estimate   Std.Error   z value  Pr(>|z|)
──────────────────────────────────────────────────────
(Intercept)   1.92596   0.0334931    57.5032    <1e-99
Odometer     -0.148154  0.00390916  -37.8993    <1e-99
Branded       1.05919   0.0433309    24.4442    <1e-99
──────────────────────────────────────────────────────

julia> initial_theta=coef(θ)
3-element Array{Float64,1}:
  1.925958829200336
 -0.14815417952882992
  1.0591890845204677

julia> 

julia> url = "https://raw.githubusercontent.com/OU-PhD-Econometrics/fall-2020/master/ProblemSets/PS5-ddc/busdata.csv"
"https://raw.githubusercontent.com/OU-PhD-Econometrics/fall-2020/master/ProblemSets/PS5-ddc/busdata.csv"

julia> df = CSV.read(HTTP.get(url).body)
1000×63 DataFrame. Omitted printing of 43 columns
│ Row  │ Y1    │ Y2    │ Y3    │ Y4    │ Y5    │ Y6    │ Y7    │ Y8    │ Y9    │ Y10   │ Y11   │ Y12   │ Y13   │ Y14   │ Y15   │ Y16   │ Y17   │ Y18   │ Y19   │ Y20   │
│      │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │
├──────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤
│ 1    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 2    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │
│ 3    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 0     │ 1     │
⋮
│ 997  │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 998  │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 999  │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 0     │ 1     │ 0     │ 0     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 1000 │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │

julia> Y=df[:,r"Y"]
1000×20 DataFrame
│ Row  │ Y1    │ Y2    │ Y3    │ Y4    │ Y5    │ Y6    │ Y7    │ Y8    │ Y9    │ Y10   │ Y11   │ Y12   │ Y13   │ Y14   │ Y15   │ Y16   │ Y17   │ Y18   │ Y19   │ Y20   │
│      │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │
├──────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤
│ 1    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 2    │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │
│ 3    │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 0     │ 1     │
⋮
│ 997  │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 998  │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │
│ 999  │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 0     │ 1     │ 0     │ 0     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │
│ 1000 │ 0     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │ 1     │ 1     │ 1     │ 0     │ 1     │ 1     │

julia> Xst=df[:,r"Xst"]
1000×20 DataFrame
│ Row  │ Xst1  │ Xst2  │ Xst3  │ Xst4  │ Xst5  │ Xst6  │ Xst7  │ Xst8  │ Xst9  │ Xst10 │ Xst11 │ Xst12 │ Xst13 │ Xst14 │ Xst15 │ Xst16 │ Xst17 │ Xst18 │ Xst19 │ Xst20 │
│      │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │ Int64 │  
├──────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤
│ 1    │ 7     │ 9     │ 10    │ 15    │ 16    │ 26    │ 1     │ 16    │ 16    │ 24    │ 28    │ 1     │ 23    │ 26    │ 27    │ 52    │ 52    │ 67    │ 1     │ 10    │
│ 2    │ 1     │ 10    │ 14    │ 14    │ 14    │ 29    │ 49    │ 1     │ 18    │ 1     │ 2     │ 8     │ 21    │ 28    │ 37    │ 39    │ 47    │ 1     │ 2     │ 5     │
│ 3    │ 20    │ 28    │ 29    │ 35    │ 39    │ 43    │ 1     │ 3     │ 5     │ 9     │ 11    │ 12    │ 12    │ 17    │ 19    │ 57    │ 1     │ 11    │ 27    │ 1     │
⋮
│ 997  │ 46    │ 64    │ 89    │ 1     │ 6     │ 32    │ 35    │ 35    │ 36    │ 37    │ 1     │ 13    │ 1     │ 14    │ 19    │ 20    │ 47    │ 74    │ 1     │ 6     │  
│ 998  │ 7     │ 34    │ 50    │ 58    │ 63    │ 63    │ 1     │ 10    │ 1     │ 3     │ 1     │ 5     │ 10    │ 26    │ 26    │ 27    │ 48    │ 54    │ 62    │ 64    │
│ 999  │ 6     │ 11    │ 12    │ 18    │ 18    │ 1     │ 24    │ 61    │ 1     │ 7     │ 1     │ 1     │ 7     │ 16    │ 1     │ 18    │ 25    │ 31    │ 1     │ 2     │
│ 1000 │ 11    │ 1     │ 4     │ 1     │ 4     │ 4     │ 4     │ 9     │ 11    │ 49    │ 50    │ 67    │ 1     │ 7     │ 7     │ 8     │ 20    │ 47    │ 1     │ 33    │

julia> Odo=df[:,r"Odo"]
1000×20 DataFrame. Omitted printing of 4 columns
│ Row  │ Odo1    │ Odo2    │ Odo3    │ Odo4    │ Odo5    │ Odo6    │ Odo7    │ Odo8    │ Odo9    │ Odo10   │ Odo11   │ Odo12   │ Odo13   │ Odo14   │ Odo15   │ Odo16   │
│      │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │ Float64 │
├──────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
│ 1    │ 0.75    │ 1.0     │ 1.125   │ 1.75    │ 1.875   │ 3.125   │ 0.0     │ 1.875   │ 1.875   │ 2.875   │ 3.375   │ 0.0     │ 2.75    │ 3.125   │ 3.25    │ 6.375   │
│ 2    │ 0.0     │ 1.125   │ 1.625   │ 1.625   │ 1.625   │ 3.5     │ 6.0     │ 0.0     │ 2.125   │ 0.0     │ 0.125   │ 0.875   │ 2.5     │ 3.375   │ 4.5     │ 4.75    │
│ 3    │ 2.375   │ 3.375   │ 3.5     │ 4.25    │ 4.75    │ 5.25    │ 0.0     │ 0.25    │ 0.5     │ 1.0     │ 1.25    │ 1.375   │ 1.375   │ 2.0     │ 2.25    │ 7.0     │  
⋮
│ 997  │ 5.625   │ 7.875   │ 11.0    │ 0.0     │ 0.625   │ 3.875   │ 4.25    │ 4.25    │ 4.375   │ 4.5     │ 0.0     │ 1.5     │ 0.0     │ 1.625   │ 2.25    │ 2.375   │  
│ 998  │ 0.75    │ 4.125   │ 6.125   │ 7.125   │ 7.75    │ 7.75    │ 0.0     │ 1.125   │ 0.0     │ 0.25    │ 0.0     │ 0.5     │ 1.125   │ 3.125   │ 3.125   │ 3.25    │
│ 999  │ 0.625   │ 1.25    │ 1.375   │ 2.125   │ 2.125   │ 0.0     │ 2.875   │ 7.5     │ 0.0     │ 0.75    │ 0.0     │ 0.0     │ 0.75    │ 1.875   │ 0.0     │ 2.125   │
│ 1000 │ 1.25    │ 0.0     │ 0.375   │ 0.0     │ 0.375   │ 0.375   │ 0.375   │ 1.0     │ 1.25    │ 6.0     │ 6.125   │ 8.25    │ 0.0     │ 0.75    │ 0.75    │ 0.875   │

julia> Zst=df.Zst
1000-element SentinelArrays.ChainedVector{Int64,Array{Int64,1}}:
  64
  36
 101
  23
  66
   ⋮
   3
  42
  74
  79
  38

julia> B=df.Branded
1000-element SentinelArrays.ChainedVector{Int64,Array{Int64,1}}:
 1
 1
 0
 1
 1
 ⋮
 1
 1
 1
 0
 1

julia> zval,zbin,xval,xbin,xtran = create_grids()
([0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34  …  1.16, 1.17, 1.18, 1.19, 1.2, 1.21, 1.22, 1.23, 1.24, 1.25], 101, [0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.7julia> @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1] 
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
               loglike=0
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
               loglike=0
               #P=zeros(size(Y,1),T,2)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
               loglike=0
               #P=zeros(size(Y,1),T,2)
               for y in size(Y,1)
julia> @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end

           @views @inbounds function myfun(initial_theta)
                   N=size(xtran,1)
                           T=size(Y,2)
                                   FV=zeros(N,2,T+1)
                                           beta=0.9
               for t in T:-1:1
                           for b in 0:1
                       for z in 1:zbin
                           for x in 1:xbin
                               row=x+(z-1)*xbin
                                                       v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]                                                                               v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                                                       FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                                           end
                       end
                   end
               end
       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
               FV=zeros(N,2,T+1)
                       beta=0.9


       @views @inbounds function myfun(initial_theta)
               N=size(xtran,1)
                       T=size(Y,2)
                               FV=zeros(N,2,T+1)
                                       beta=0.9
               for t in T:-1:1
                   for b in 0:1
                       for z in 1:zbin
                                           for x in 1:xbin
                               row=x+(z-1)*xbin
                               v1=initial_theta[1]+initial_theta[2]*xval[x]+initial_theta[3]*b+ beta*xtran[row,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                       v0=beta*xtran[1+(z-1)*xbin,:]'*FV[(z-1)*xbin+1:z*xbin,b+1,t+1]
                                                                               FV[row,b+1,t]=beta*log(exp(v1)+exp(v0))
                                                                                                   end
                       end
                   end
               end

               #part d
               loglike=0
               #P=zeros(size(Y,1),T,2)
               for y in size(Y,1)
                   for t in 1:T
                       r1=1+ (Zst[y]-1)*xbin
                       r0=Xst[y,t]+ (Zst[y]-1)*xbin
                       U=initial_theta[1] + initial_theta[2]*Xst[y,t] + initial_theta[3]*B[y] +(xtran[r1,:].-xtran[r0, :])'*FV[r0:r0+xbin-1, B[y]+1, t+1]
                       P=exp(U)/(1+exp(U))
                       loglike+=Y[y,t]log(P)+(Y[y,t]-1)log(1-P)
                   end
               end
               return -loglike
           end

           optimizer_ = optimize(theta -> myfun(theta), initial_theta, LBFGS(), Optim.Options(g_tol=1e-5, iterations=100_000, show_trace=true))

       end